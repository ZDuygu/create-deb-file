name: Publish

on:
  push:
    # Sequence of patterns matched against refs/tags
    branches: ["master"]

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.date.outputs.date}}
          release_name: ${{steps.date.outputs.date}}
          body: |
            Changes in this Release
            - Print files in current directory
          draft: false
          prerelease: false

      - name: Build Docker
        run: |
          docker build . --file Dockerfile --tag sambadev
          docker run sambadev

      - name: Get Samba From Docker
        run: |
          docker create -ti --name dummy sambadev bash

      - name: Build
        id: build_package
        run: |
          ls
          pwd
          cd src
          ls
          pwd
          mkdir DEBIAN
          touch DEBIAN/md5sums
          touch DEBIAN/control
          find . -type f ! -regex '.*.hg.*' ! -regex '.*?debian-binary.*' ! -regex '.*?DEBIAN.*' -printf '%P ' | xargs md5sum  1>/dev/null 2>/dev/null || true
          size=$(du -s ../src | cut -f 1)
          echo "Package: Package
          Version: $GITHUB_RUN_ID
          Installed-Size: $size
          Maintainer: Duygu Ã–lmez <zeynepduyguolmez@gmail.com>
          Section: admin
          Date : $GITHUB_RUN_ID
          Architecture: amd64
          Priority: important
          Description: Example Pack
          " > DEBIAN/control
          cd ../
          mv src python-package
          dpkg-deb -Zgzip --build python-package
          mkdir dist
          pwd
          ls
          echo ::set-output name=path::$(pwd)/python-package.deb
          echo ::set-output name=filename::python-package.deb

      - name: Print the Variables
        run: |
          echo "upload_url: " ${{ steps.create_release.outputs.upload_url }}
          echo "filename: " ${{ steps.create_release.outputs.filename }}
          echo "github.ref: " ${{ github.ref }}

      - name: Upload the Debian package to Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build_package.outputs.path }}
          asset_name: ${{ steps.build_package.outputs.filename }}
          asset_content_type: application/vnd.debian.binary-package
